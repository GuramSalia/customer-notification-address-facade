-- as long as we test using postgresql
DROP TABLE IF EXISTS APP_USERS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS ADDRESSES;
DROP TABLE IF EXISTS NOTIFICATION_PREFERENCES;
DROP TABLE IF EXISTS NOTIFICATIONS;
DROP TABLE IF EXISTS NOTIFICATION_MESSAGES;


CREATE TABLE IF NOT EXISTS APP_USERS (
    ID SERIAL PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    ROLE VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS CUSTOMERS (
    ID SERIAL PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS ADDRESSES (
    ID SERIAL PRIMARY KEY,
    CUSTOMER_ID BIGINT NOT NULL,
    TYPE VARCHAR(10) NOT NULL,
    CONTACT_VALUE VARCHAR(255) NOT NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
);

CREATE TABLE IF NOT EXISTS NOTIFICATION_PREFERENCES (
    ID SERIAL PRIMARY KEY,
    CUSTOMER_ID BIGINT NOT NULL,
    OPT_IN_SMS BOOLEAN NOT NULL,
    OPT_IN_EMAIL BOOLEAN NOT NULL,
    OPT_IN_PROMOTIONAL_MESSAGES BOOLEAN NOT NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
);

CREATE TABLE IF NOT EXISTS NOTIFICATION_MESSAGES (
    ID SERIAL PRIMARY KEY,
    MESSAGE VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS NOTIFICATIONS (
    ID SERIAL PRIMARY KEY,
    TYPE VARCHAR(50) NOT NULL,
    RECIPIENT VARCHAR(255) NOT NULL,
    MESSAGE_ID BIGINT NOT NULL,
    SENT_DATE_TIME TIMESTAMP NOT NULL,
    STATUS VARCHAR(10) NOT NULL,
    FOREIGN KEY (MESSAGE_ID) REFERENCES NOTIFICATION_MESSAGES(ID)
);

